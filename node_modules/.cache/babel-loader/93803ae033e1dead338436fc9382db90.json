{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taimoor\\\\Documents\\\\ReactApps\\\\isitworthwatching\\\\isitworthwatching\\\\src\\\\components\\\\MoviePage.js\",\n    _s = $RefreshSig$();\n\nimport \"./MoviePage.css\";\nimport PosterCard from \"./PosterCard\";\nimport InfoCard from \"./InfoCard\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MOVIEDATA_ARRAY = [];\nlet RATINGSDATA_ARRAY = [];\nlet IIWW_RATING = 0;\nlet imdbval = 0;\nlet rotval = 0;\nlet metvalArray = [];\nlet imdbR = false;\nlet rotR = false;\nlet metR = false;\nlet infoCardText = '';\n\nconst MoviePage = props => {\n  _s();\n\n  const [movieData, setMovieData] = useState([]);\n  const [ratingsData, setRatingsData] = useState([]);\n  const [iiwwRating, setiiwwRating] = useState('');\n  const [iiwwStyle, setiiwwStyle] = useState(''); //const [infoCardText, setInfoCardText] = useState('');\n\n  const getHandler = async () => {\n    try {\n      axios.get(\"https://www.omdbapi.com/?i=\" + props.id + \"&apikey=bf994a28\").then(res => {\n        MOVIEDATA_ARRAY = res.data;\n        setMovieData(MOVIEDATA_ARRAY);\n        RATINGSDATA_ARRAY = MOVIEDATA_ARRAY.Ratings;\n        setRatingsData(RATINGSDATA_ARRAY);\n        console.log(ratingsData);\n        createIIWWRating();\n      }).catch(err => {\n        console.log(err);\n      });\n    } catch (error) {\n      console.log(\"fail\");\n    }\n  };\n\n  useEffect(() => {\n    getHandler();\n  }, []);\n\n  const createIIWWRating = () => {\n    let count = 0;\n\n    while (count < ratingsData.length) {\n      if (ratingsData[count].Source === \"Internet Movie Database\") {\n        const imdbvalArray = ratingsData[count].Value.split(\"/\");\n        imdbval = imdbvalArray[0] * 10;\n        imdbR = true;\n        console.log(\"imdbR = \" + imdbR);\n      }\n\n      if (ratingsData[count].Source === \"Rotten Tomatoes\") {\n        rotval = ratingsData[count].Value.replace(\"%\", \"\");\n        rotR = true;\n        console.log(\"rotR = \" + rotR);\n      }\n\n      if (ratingsData[count].Source === \"Metacritic\") {\n        metvalArray = ratingsData[count].Value.split(\"/\");\n        metR = true;\n        console.log(\"metR = \" + metR);\n      }\n\n      count++;\n    }\n\n    if (imdbR === true && rotR === false && metR === false) {\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval);\n      console.log(IIWW_RATING + \"1\");\n      setiiwwRating(IIWW_RATING);\n    }\n\n    if (imdbR === true && rotR === true && metR === false) {\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.6);\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval * 0.4);\n      console.log(IIWW_RATING + \"2\");\n      setiiwwRating(IIWW_RATING);\n    }\n\n    if (imdbR === true && rotR === false && metR === true) {\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.6);\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0] * 0.4);\n      console.log(IIWW_RATING + \"3\");\n      setiiwwRating(IIWW_RATING);\n    }\n\n    if (imdbR === true && rotR === true && metR === true) {\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.6);\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval * 0.2);\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0] * 0.2);\n      console.log(IIWW_RATING + \"4\");\n      setiiwwRating(IIWW_RATING);\n    }\n\n    console.log(iiwwRating);\n  }; //   const createIIWWRating = () =>{\n  //       ratingsData.map((movie) => {\n  //           if (movie.Source === \"Internet Movie Database\"){\n  //             const imdbvalArray = movie.Value.split(\"/\");\n  //             imdbval = imdbvalArray[0] * 10;\n  //             imdbR = true;\n  //             console.log(\"imdbR = \" + imdbR);\n  //           }\n  //           if (movie.Source === \"Rotten Tomatoes\"){\n  //               rotval = movie.Value.replace(\"%\", \"\");\n  //               rotR = true;\n  //               console.log(\"rotR = \" + rotR);\n  //           }\n  //           if (movie.Source === \"Metacritic\"){\n  //               metvalArray = movie.Value.split(\"/\");\n  //               metR = true;\n  //               console.log(\"metR = \" + metR);\n  //           }\n  //         });\n  //           if (imdbR === true && rotR === false && metR === false){\n  //             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval);\n  //             console.log(IIWW_RATING + \"1\");\n  //             setiiwwRating(IIWW_RATING);\n  //           }\n  //           if (imdbR === true && rotR === true && metR === false){\n  //             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\n  //             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval*0.4);\n  //             console.log(IIWW_RATING + \"2\");\n  //             setiiwwRating(IIWW_RATING);\n  //           } \n  //           if (imdbR === true && rotR === false && metR === true){\n  //             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\n  //             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0]*0.4);\n  //             console.log(IIWW_RATING + \"3\");\n  //             setiiwwRating(IIWW_RATING);\n  //           }\n  //            if (imdbR === true && rotR === true && metR === true){\n  //             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\n  //             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval*0.2);\n  //             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0]*0.2);\n  //             console.log(IIWW_RATING + \"4\");\n  //             setiiwwRating(IIWW_RATING);\n  //           }\n  //             console.log(iiwwRating);\n  //             if (IIWW_RATING > \"70\"){\n  //                 setiiwwStyle(<InfoCard styles=\"card text-white bg-success mb-3\" title=\"Is It Worth Watching?\" rating={iiwwRating} text=\"Yes it is!\" /> );\n  //             }else{\n  //                 setiiwwStyle(<InfoCard styles=\"card text-white bg-danger mb-3\" title=\"Is It Worth Watching?\" rating={iiwwRating} text=\"No, don't waste your time!\" /> );\n  //             }\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviePageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(PosterCard, {\n      id: props.id,\n      title: movieData.Title,\n      plot: movieData.Plot,\n      poster: movieData.Poster,\n      year: movieData.Released\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ratingsContainer\",\n      children: [iiwwStyle, ratingsData.map(movie => /*#__PURE__*/_jsxDEV(InfoCard, {\n        styles: \"card text-white bg-dark mb-3\",\n        title: movie.Source,\n        rating: movie.Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviePage, \"tWVLKZbGxPTTH8TQGByHMPKT9y8=\");\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["C:/Users/Taimoor/Documents/ReactApps/isitworthwatching/isitworthwatching/src/components/MoviePage.js"],"names":["PosterCard","InfoCard","axios","React","useEffect","useState","MOVIEDATA_ARRAY","RATINGSDATA_ARRAY","IIWW_RATING","imdbval","rotval","metvalArray","imdbR","rotR","metR","infoCardText","MoviePage","props","movieData","setMovieData","ratingsData","setRatingsData","iiwwRating","setiiwwRating","iiwwStyle","setiiwwStyle","getHandler","get","id","then","res","data","Ratings","console","log","createIIWWRating","catch","err","error","count","length","Source","imdbvalArray","Value","split","replace","parseInt","Title","Plot","Poster","Released","map","movie"],"mappings":"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","sourcesContent":["import \"./MoviePage.css\";\r\nimport PosterCard from \"./PosterCard\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nlet MOVIEDATA_ARRAY = [];\r\nlet RATINGSDATA_ARRAY = [];\r\nlet IIWW_RATING = 0;\r\nlet imdbval = 0;\r\nlet rotval = 0;\r\nlet metvalArray = [];\r\n\r\nlet imdbR = false;\r\nlet rotR = false;\r\nlet metR = false;\r\nlet infoCardText = '';\r\n\r\nconst MoviePage = (props) => {\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [ratingsData, setRatingsData] = useState([]);\r\n  const [iiwwRating, setiiwwRating] = useState('');\r\n  const [iiwwStyle, setiiwwStyle] = useState('');\r\n  //const [infoCardText, setInfoCardText] = useState('');\r\n\r\n  const getHandler = async () => {\r\n    try {\r\n      axios\r\n        .get(\"https://www.omdbapi.com/?i=\" + props.id + \"&apikey=bf994a28\")\r\n        .then((res) => {\r\n          MOVIEDATA_ARRAY = res.data;\r\n          setMovieData(MOVIEDATA_ARRAY);\r\n          RATINGSDATA_ARRAY = MOVIEDATA_ARRAY.Ratings;\r\n          setRatingsData(RATINGSDATA_ARRAY);\r\n          console.log(ratingsData);\r\n          createIIWWRating();\r\n          \r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"fail\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHandler();\r\n  },[]);\r\n\r\n\r\n\r\n  const createIIWWRating = () =>{\r\n      let count = 0;\r\n\r\n      while(count < ratingsData.length){\r\n          if(ratingsData[count].Source === \"Internet Movie Database\"){\r\n            const imdbvalArray = ratingsData[count].Value.split(\"/\");\r\n            imdbval = imdbvalArray[0] * 10;\r\n            imdbR = true;\r\n            console.log(\"imdbR = \" + imdbR);\r\n          }\r\n\r\n          if (ratingsData[count].Source === \"Rotten Tomatoes\"){\r\n            rotval = ratingsData[count].Value.replace(\"%\", \"\");\r\n            rotR = true;\r\n            console.log(\"rotR = \" + rotR);\r\n        }\r\n\r\n        if (ratingsData[count].Source === \"Metacritic\"){\r\n            metvalArray = ratingsData[count].Value.split(\"/\");\r\n            metR = true;\r\n            console.log(\"metR = \" + metR);\r\n        }\r\n        count++;\r\n    }\r\n\r\n        if (imdbR === true && rotR === false && metR === false){\r\n            IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval);\r\n            console.log(IIWW_RATING + \"1\");\r\n            setiiwwRating(IIWW_RATING);\r\n          }\r\n          \r\n          if (imdbR === true && rotR === true && metR === false){\r\n            IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\r\n            IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval*0.4);\r\n            console.log(IIWW_RATING + \"2\");\r\n            setiiwwRating(IIWW_RATING);\r\n          } \r\n          \r\n          if (imdbR === true && rotR === false && metR === true){\r\n            IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\r\n            IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0]*0.4);\r\n            console.log(IIWW_RATING + \"3\");\r\n            setiiwwRating(IIWW_RATING);\r\n          }\r\n           if (imdbR === true && rotR === true && metR === true){\r\n            IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\r\n            IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval*0.2);\r\n            IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0]*0.2);\r\n            console.log(IIWW_RATING + \"4\");\r\n            setiiwwRating(IIWW_RATING);\r\n          }\r\n\r\n            console.log(iiwwRating);\r\n\r\n      }\r\n  \r\n\r\n//   const createIIWWRating = () =>{\r\n//       ratingsData.map((movie) => {\r\n//           if (movie.Source === \"Internet Movie Database\"){\r\n//             const imdbvalArray = movie.Value.split(\"/\");\r\n//             imdbval = imdbvalArray[0] * 10;\r\n//             imdbR = true;\r\n//             console.log(\"imdbR = \" + imdbR);\r\n//           }\r\n\r\n//           if (movie.Source === \"Rotten Tomatoes\"){\r\n//               rotval = movie.Value.replace(\"%\", \"\");\r\n//               rotR = true;\r\n//               console.log(\"rotR = \" + rotR);\r\n//           }\r\n\r\n//           if (movie.Source === \"Metacritic\"){\r\n//               metvalArray = movie.Value.split(\"/\");\r\n//               metR = true;\r\n//               console.log(\"metR = \" + metR);\r\n//           }\r\n//         });\r\n\r\n//           if (imdbR === true && rotR === false && metR === false){\r\n//             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval);\r\n//             console.log(IIWW_RATING + \"1\");\r\n//             setiiwwRating(IIWW_RATING);\r\n//           }\r\n          \r\n//           if (imdbR === true && rotR === true && metR === false){\r\n//             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\r\n//             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval*0.4);\r\n//             console.log(IIWW_RATING + \"2\");\r\n//             setiiwwRating(IIWW_RATING);\r\n//           } \r\n          \r\n//           if (imdbR === true && rotR === false && metR === true){\r\n//             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\r\n//             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0]*0.4);\r\n//             console.log(IIWW_RATING + \"3\");\r\n//             setiiwwRating(IIWW_RATING);\r\n//           }\r\n//            if (imdbR === true && rotR === true && metR === true){\r\n//             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval*0.6);\r\n//             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval*0.2);\r\n//             IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0]*0.2);\r\n//             console.log(IIWW_RATING + \"4\");\r\n//             setiiwwRating(IIWW_RATING);\r\n//           }\r\n\r\n//             console.log(iiwwRating);\r\n//             if (IIWW_RATING > \"70\"){\r\n//                 setiiwwStyle(<InfoCard styles=\"card text-white bg-success mb-3\" title=\"Is It Worth Watching?\" rating={iiwwRating} text=\"Yes it is!\" /> );\r\n//             }else{\r\n//                 setiiwwStyle(<InfoCard styles=\"card text-white bg-danger mb-3\" title=\"Is It Worth Watching?\" rating={iiwwRating} text=\"No, don't waste your time!\" /> );\r\n//             }\r\n\r\n//   }\r\n\r\n  return (\r\n    <div className=\"moviePageContainer\">\r\n      <PosterCard\r\n        key={props.id}\r\n        id={props.id}\r\n        title={movieData.Title}\r\n        plot={movieData.Plot}\r\n        poster={movieData.Poster}\r\n        year={movieData.Released}\r\n      />\r\n      <ul className=\"ratingsContainer\">\r\n        {iiwwStyle}\r\n        {ratingsData.map((movie) => (\r\n          <InfoCard styles=\"card text-white bg-dark mb-3\" title={movie.Source} rating={movie.Value} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"]},"metadata":{},"sourceType":"module"}