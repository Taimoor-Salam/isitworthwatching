{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taimoor\\\\Documents\\\\ReactApps\\\\isitworthwatching\\\\isitworthwatching\\\\src\\\\components\\\\StartPage.js\",\n    _s = $RefreshSig$();\n\nimport SearchForm from \"./SearchForm\";\nimport Card from \"./Card\";\nimport \"./StartPage.css\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DUMMY_LIST = [];\n\nconst StartPage = props => {\n  _s();\n\n  const [movieData, setMovieData] = useState([]);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const getHandler = async name => {\n    try {\n      axios.get(\"https://www.omdbapi.com/?s=\" + name + \"&apikey=bf994a28\").then(res => {\n        if (res.data.Response === \"True\") {\n          setErrorMsg('Did you mean..');\n          DUMMY_LIST = res.data.Search;\n          setMovieData(DUMMY_LIST);\n          console.log(movieData);\n        } else {\n          setErrorMsg('Movies not found. Try again!');\n          setMovieData([]);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } catch (error) {\n      console.log(\"fail\");\n    }\n  };\n\n  const movieSearchHandler = search => {\n    let searchName = \"\";\n    searchName = search.replace(\" \", \"+\");\n    getHandler(searchName);\n  };\n\n  const movieSelectHandler = id => {\n    props.movieSelected(id);\n  };\n\n  useEffect(() => {\n    const test = getComputedStyle(document.body);\n    console.log(test);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      handler: movieSearchHandler,\n      search: movieSearchHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMsg\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-cols-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"listContainer\",\n          children: movieData.map(movie => /*#__PURE__*/_jsxDEV(Card, {\n            id: movie.imdbID,\n            title: movie.Title,\n            poster: movie.Poster,\n            year: movie.Year,\n            cardClick: movieSelectHandler\n          }, movie.imdbID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartPage, \"rJCe8fz5HWmoHsYWG8ms2mX9j3k=\");\n\n_c = StartPage;\nexport default StartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"sources":["C:/Users/Taimoor/Documents/ReactApps/isitworthwatching/isitworthwatching/src/components/StartPage.js"],"names":["SearchForm","Card","React","useEffect","useState","axios","DUMMY_LIST","StartPage","props","movieData","setMovieData","errorMsg","setErrorMsg","getHandler","name","get","then","res","data","Response","Search","console","log","catch","err","error","movieSearchHandler","search","searchName","replace","movieSelectHandler","id","movieSelected","test","getComputedStyle","document","body","map","movie","imdbID","Title","Poster","Year"],"mappings":"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","sourcesContent":["import SearchForm from \"./SearchForm\";\r\nimport Card from \"./Card\";\r\nimport \"./StartPage.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nlet DUMMY_LIST = [];\r\n\r\nconst StartPage = (props) => {\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const getHandler = async (name) => {\r\n    try {\r\n      axios\r\n        .get(\"https://www.omdbapi.com/?s=\" + name + \"&apikey=bf994a28\")\r\n        .then((res) => {\r\n          if (res.data.Response === \"True\") {\r\n            setErrorMsg('Did you mean..');\r\n            DUMMY_LIST = res.data.Search;\r\n            setMovieData(DUMMY_LIST);\r\n            console.log(movieData);\r\n          } else {\r\n            setErrorMsg('Movies not found. Try again!')\r\n            setMovieData([]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"fail\");\r\n    }\r\n  };\r\n\r\n  const movieSearchHandler = (search) => {\r\n    let searchName = \"\";\r\n    searchName = search.replace(\" \", \"+\");\r\n    getHandler(searchName);\r\n  };\r\n\r\n  const movieSelectHandler = (id) => {\r\n    props.movieSelected(id);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    const test = getComputedStyle(document.body);\r\n    console.log(test);\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      <SearchForm handler={movieSearchHandler} search={movieSearchHandler} />\r\n      <p className=\"errorMsg\">{errorMsg}</p>\r\n      <div className=\"container\">\r\n      <div className=\"row row-cols-auto\">\r\n          <ul className=\"listContainer\">\r\n            {movieData.map((movie) => (\r\n              <Card\r\n                key={movie.imdbID}\r\n                id={movie.imdbID}\r\n                title={movie.Title}\r\n                poster={movie.Poster}\r\n                year={movie.Year}\r\n                cardClick={movieSelectHandler}\r\n              />\r\n            ))}\r\n          </ul>\r\n        \r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n"]},"metadata":{},"sourceType":"module"}