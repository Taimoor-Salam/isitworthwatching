{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taimoor\\\\Documents\\\\ReactApps\\\\isitworthwatching\\\\isitworthwatching\\\\src\\\\components\\\\MoviePage.js\",\n    _s = $RefreshSig$();\n\nimport \"./MoviePage.css\";\nimport PosterCard from \"./PosterCard\";\nimport InfoCard from \"./InfoCard\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MOVIEDATA_ARRAY = [];\nlet RATINGSDATA_ARRAY = [];\nlet IIWW_RATING = 0;\n\nconst MoviePage = props => {\n  _s();\n\n  const [movieData, setMovieData] = useState([]);\n  const [ratingsData, setRatingsData] = useState([]);\n  const [iiwwRating, setIIWWRating] = useState[0];\n\n  const getHandler = async () => {\n    try {\n      axios.get(\"https://www.omdbapi.com/?i=\" + props.id + \"&apikey=bf994a28\").then(res => {\n        MOVIEDATA_ARRAY = res.data;\n        setMovieData(MOVIEDATA_ARRAY);\n        RATINGSDATA_ARRAY = MOVIEDATA_ARRAY.Ratings;\n        setRatingsData(RATINGSDATA_ARRAY);\n        console.log(ratingsData);\n        createIIWWRating();\n      }).catch(err => {\n        console.log(err);\n      });\n    } catch (error) {\n      console.log(\"fail\");\n    }\n  };\n\n  useEffect(() => {\n    getHandler();\n  }, []);\n\n  const createIIWWRating = () => {\n    ratingsData.map(movie => {\n      if (movie.Source === \"Internet Movie Database\") {\n        const imdbval = movie.Value.split(\"/\");\n        imdbval = imdbval * 100;\n        iiwwRating = iiwwRating + imdbval;\n        console.log(iiwwRating);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviePageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(PosterCard, {\n      id: props.id,\n      title: movieData.Title,\n      plot: movieData.Plot,\n      poster: movieData.Poster,\n      year: movieData.Released\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ratingsContainer\",\n      children: ratingsData.map(movie => /*#__PURE__*/_jsxDEV(InfoCard, {\n        title: movie.Source,\n        rating: movie.Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviePage, \"2h0f6LJMPi7iZNDSQcTWX1A82cY=\");\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["C:/Users/Taimoor/Documents/ReactApps/isitworthwatching/isitworthwatching/src/components/MoviePage.js"],"names":["PosterCard","InfoCard","axios","React","useEffect","useState","MOVIEDATA_ARRAY","RATINGSDATA_ARRAY","IIWW_RATING","MoviePage","props","movieData","setMovieData","ratingsData","setRatingsData","iiwwRating","setIIWWRating","getHandler","get","id","then","res","data","Ratings","console","log","createIIWWRating","catch","err","error","map","movie","Source","imdbval","Value","split","Title","Plot","Poster","Released"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,iBAAiB,GAAG,EAAxB;AACA,IAAIC,WAAW,GAAG,CAAlB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,CAAD,CAA5C;;AAEA,QAAMY,UAAU,GAAG,YAAY;AAC7B,QAAI;AACFf,MAAAA,KAAK,CACFgB,GADH,CACO,gCAAgCR,KAAK,CAACS,EAAtC,GAA2C,kBADlD,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbf,QAAAA,eAAe,GAAGe,GAAG,CAACC,IAAtB;AACAV,QAAAA,YAAY,CAACN,eAAD,CAAZ;AACAC,QAAAA,iBAAiB,GAAGD,eAAe,CAACiB,OAApC;AACAT,QAAAA,cAAc,CAACP,iBAAD,CAAd;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACAa,QAAAA,gBAAgB;AACjB,OATH,EAUGC,KAVH,CAUUC,GAAD,IAAS;AACdJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OAZH;AAaD,KAdD,CAcE,OAAOC,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,GAlBD;;AAoBArB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMS,gBAAgB,GAAG,MAAK;AAC1Bb,IAAAA,WAAW,CAACiB,GAAZ,CAAiBC,KAAD,IAAW;AACvB,UAAIA,KAAK,CAACC,MAAN,KAAiB,yBAArB,EAA+C;AAC7C,cAAMC,OAAO,GAAGF,KAAK,CAACG,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,CAAhB;AACAF,QAAAA,OAAO,GAAGA,OAAO,GAAG,GAApB;AACAlB,QAAAA,UAAU,GAAGA,UAAU,GAAGkB,OAA1B;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACD;AACJ,KAPD;AAQH,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE,QAAC,UAAD;AAEE,MAAA,EAAE,EAAEL,KAAK,CAACS,EAFZ;AAGE,MAAA,KAAK,EAAER,SAAS,CAACyB,KAHnB;AAIE,MAAA,IAAI,EAAEzB,SAAS,CAAC0B,IAJlB;AAKE,MAAA,MAAM,EAAE1B,SAAS,CAAC2B,MALpB;AAME,MAAA,IAAI,EAAE3B,SAAS,CAAC4B;AANlB,OACO7B,KAAK,CAACS,EADb;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA,gBACGN,WAAW,CAACiB,GAAZ,CAAiBC,KAAD,iBACf,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,KAAK,CAACC,MAAvB;AAA+B,QAAA,MAAM,EAAED,KAAK,CAACG;AAA7C;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzDD;;GAAMzB,S;;KAAAA,S;AA2DN,eAAeA,SAAf","sourcesContent":["import \"./MoviePage.css\";\r\nimport PosterCard from \"./PosterCard\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nlet MOVIEDATA_ARRAY = [];\r\nlet RATINGSDATA_ARRAY = [];\r\nlet IIWW_RATING = 0;\r\n\r\nconst MoviePage = (props) => {\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [ratingsData, setRatingsData] = useState([]);\r\n  const [iiwwRating, setIIWWRating] = useState[0];\r\n\r\n  const getHandler = async () => {\r\n    try {\r\n      axios\r\n        .get(\"https://www.omdbapi.com/?i=\" + props.id + \"&apikey=bf994a28\")\r\n        .then((res) => {\r\n          MOVIEDATA_ARRAY = res.data;\r\n          setMovieData(MOVIEDATA_ARRAY);\r\n          RATINGSDATA_ARRAY = MOVIEDATA_ARRAY.Ratings;\r\n          setRatingsData(RATINGSDATA_ARRAY);\r\n          console.log(ratingsData);\r\n          createIIWWRating();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } catch (error) {\r\n      console.log(\"fail\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHandler();\r\n  }, []);\r\n\r\n  const createIIWWRating = () =>{\r\n      ratingsData.map((movie) => {\r\n          if (movie.Source === \"Internet Movie Database\"){\r\n            const imdbval = movie.Value.split(\"/\");\r\n            imdbval = imdbval * 100;\r\n            iiwwRating = iiwwRating + imdbval;\r\n            console.log(iiwwRating);\r\n          }\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"moviePageContainer\">\r\n      <PosterCard\r\n        key={props.id}\r\n        id={props.id}\r\n        title={movieData.Title}\r\n        plot={movieData.Plot}\r\n        poster={movieData.Poster}\r\n        year={movieData.Released}\r\n      />\r\n      <ul className=\"ratingsContainer\">\r\n        {ratingsData.map((movie) => (\r\n          <InfoCard title={movie.Source} rating={movie.Value} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"]},"metadata":{},"sourceType":"module"}