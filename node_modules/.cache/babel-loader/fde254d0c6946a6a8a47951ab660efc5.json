{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taimoor\\\\Documents\\\\ReactApps\\\\isitworthwatching\\\\isitworthwatching\\\\src\\\\components\\\\MoviePage.js\",\n    _s = $RefreshSig$();\n\nimport \"./MoviePage.css\";\nimport PosterCard from \"./PosterCard\";\nimport InfoCard from \"./InfoCard\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet MOVIEDATA_ARRAY = [];\nlet RATINGSDATA_ARRAY = [];\nlet IIWW_RATING = 0;\nlet imdbval = 0;\nlet rotval = 0;\nlet metvalArray = [];\nlet imdbR = false;\nlet rotR = false;\nlet metR = false;\nlet newPoster = '';\nlet infoCardText = \"\";\n\nconst MoviePage = props => {\n  _s();\n\n  const [movieData, setMovieData] = useState([]);\n  const [ratingsData, setRatingsData] = useState([]);\n  const [movErrorMsg, setMovErrorMsg] = useState(\"\");\n  const [iiwwStyle, setiiwwStyle] = useState(\"\"); //const [infoCardText, setInfoCardText] = useState('');\n\n  const getHandler = async () => {\n    try {\n      axios.get(\"https://www.omdbapi.com/?i=\" + props.id + \"&apikey=bf994a28\").then(res => {\n        MOVIEDATA_ARRAY = res.data;\n        setMovieData(MOVIEDATA_ARRAY);\n\n        if (MOVIEDATA_ARRAY.Ratings.length > 0) {\n          RATINGSDATA_ARRAY = MOVIEDATA_ARRAY.Ratings;\n          setRatingsData(RATINGSDATA_ARRAY);\n          createIIWWRating(RATINGSDATA_ARRAY, MOVIEDATA_ARRAY.Genre);\n        } else {\n          setMovErrorMsg(\"Error: This title is unrated. Try another! \");\n        }\n      }).catch(() => {\n        setMovErrorMsg(\"Error: This title is unrated. Try another! \");\n      });\n    } catch (error) {\n      setMovErrorMsg(\"Error: This title is unrated. Try another!\");\n    }\n  };\n\n  useEffect(() => {\n    IIWW_RATING = 0;\n    getHandler();\n  }, []);\n\n  const createIIWWRating = (ratingsData, Genre) => {\n    let count = 0;\n\n    while (count < ratingsData.length) {\n      if (ratingsData[count].Source === \"Internet Movie Database\") {\n        const imdbvalArray = ratingsData[count].Value.split(\"/\");\n        imdbval = imdbvalArray[0] * 10;\n        imdbR = true;\n      }\n\n      if (ratingsData[count].Source === \"Rotten Tomatoes\") {\n        rotval = ratingsData[count].Value.replace(\"%\", \"\");\n        rotR = true;\n      }\n\n      if (ratingsData[count].Source === \"Metacritic\") {\n        metvalArray = ratingsData[count].Value.split(\"/\");\n        metR = true;\n      }\n\n      count++;\n    }\n\n    if (imdbR === true && rotR === false && metR === false) {\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval);\n    }\n\n    if (imdbR === true && rotR === true && metR === false) {\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.75);\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval * 0.25);\n    }\n\n    if (imdbR === true && rotR === false && metR === true) {\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.75);\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0] * 0.25);\n    }\n\n    if (imdbR === true && rotR === true && metR === true) {\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.6);\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval * 0.2);\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0] * 0.2);\n    }\n\n    if (imdbR === false && rotR === false && metR === false) {\n      setMovErrorMsg(\"Error: This title is unrated. Try another!\");\n    }\n\n    if (Genre.length > 8) {\n      const genreArray = Genre.split(\", \");\n      let genreIndex = genreArray.indexOf(\"Horror\");\n\n      if (genreIndex !== -1) {\n        ourRating(IIWW_RATING, \"65\");\n      }\n\n      genreIndex = genreArray.indexOf(\"Comedy\");\n\n      if (genreIndex !== -1) {\n        ourRating(IIWW_RATING, \"60\");\n      } else {\n        ourRating(IIWW_RATING, \"70\");\n      }\n    } else if (Genre === \"Comedy\") {\n      ourRating(IIWW_RATING, \"60\");\n    } else if (Genre === \"Horror\") {\n      ourRating(IIWW_RATING, \"65\");\n    } else {\n      ourRating(IIWW_RATING, \"70\");\n    }\n  };\n\n  const ourRating = (rating, ratingMin) => {\n    if (rating >= ratingMin) {\n      setiiwwStyle( /*#__PURE__*/_jsxDEV(InfoCard, {\n        styles: \"card text-white bg-success mb-3\",\n        title: \"Is It Worth Watching?\",\n        rating: IIWW_RATING + \"/100\",\n        text: \"Yes it is!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this));\n    } else {\n      setiiwwStyle( /*#__PURE__*/_jsxDEV(InfoCard, {\n        styles: \"card text-white bg-danger mb-3\",\n        title: \"Is It Worth Watching?\",\n        rating: IIWW_RATING + \"/100\",\n        text: \"No, don't waste your time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviePageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(PosterCard, {\n      id: props.id,\n      title: movieData.Title,\n      plot: movieData.Plot,\n      poster: movieData.Poster,\n      year: movieData.Released,\n      runtime: movieData.Runtime\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ratingsContainer\",\n      children: [iiwwStyle, ratingsData.map(movie => /*#__PURE__*/_jsxDEV(InfoCard, {\n        styles: \"card text-white bg-dark mb-3\",\n        title: movie.Source,\n        rating: movie.Value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"backButton\",\n      onClick: props.goBack,\n      children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n        name: \"arrow-back-outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movErrorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoviePage, \"7MpWesYxoI5GiJ2zM/PZ1kGQZrM=\");\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["C:/Users/Taimoor/Documents/ReactApps/isitworthwatching/isitworthwatching/src/components/MoviePage.js"],"names":["PosterCard","InfoCard","axios","React","useEffect","useState","MOVIEDATA_ARRAY","RATINGSDATA_ARRAY","IIWW_RATING","imdbval","rotval","metvalArray","imdbR","rotR","metR","newPoster","infoCardText","MoviePage","props","movieData","setMovieData","ratingsData","setRatingsData","movErrorMsg","setMovErrorMsg","iiwwStyle","setiiwwStyle","getHandler","get","id","then","res","data","Ratings","length","createIIWWRating","Genre","catch","error","count","Source","imdbvalArray","Value","split","replace","parseInt","genreArray","genreIndex","indexOf","ourRating","rating","ratingMin","Title","Plot","Poster","Released","Runtime","map","movie","goBack"],"mappings":"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","sourcesContent":["import \"./MoviePage.css\";\r\nimport PosterCard from \"./PosterCard\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nlet MOVIEDATA_ARRAY = [];\r\nlet RATINGSDATA_ARRAY = [];\r\nlet IIWW_RATING = 0;\r\nlet imdbval = 0;\r\nlet rotval = 0;\r\nlet metvalArray = [];\r\n\r\nlet imdbR = false;\r\nlet rotR = false;\r\nlet metR = false;\r\nlet newPoster = '';\r\nlet infoCardText = \"\";\r\n\r\nconst MoviePage = (props) => {\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [ratingsData, setRatingsData] = useState([]);\r\n  const [movErrorMsg, setMovErrorMsg] = useState(\"\");\r\n  const [iiwwStyle, setiiwwStyle] = useState(\"\");\r\n  //const [infoCardText, setInfoCardText] = useState('');\r\n\r\n  const getHandler = async () => {\r\n    try {\r\n      axios\r\n        .get(\"https://www.omdbapi.com/?i=\" + props.id + \"&apikey=bf994a28\")\r\n        .then((res) => {\r\n          MOVIEDATA_ARRAY = res.data;\r\n          setMovieData(MOVIEDATA_ARRAY);\r\n          if (MOVIEDATA_ARRAY.Ratings.length > 0){\r\n            RATINGSDATA_ARRAY = MOVIEDATA_ARRAY.Ratings;\r\n            setRatingsData(RATINGSDATA_ARRAY);\r\n            createIIWWRating(RATINGSDATA_ARRAY, MOVIEDATA_ARRAY.Genre);\r\n          } else {\r\n            setMovErrorMsg(\"Error: This title is unrated. Try another! \");\r\n          }\r\n        })\r\n        .catch(() => {\r\n            setMovErrorMsg(\"Error: This title is unrated. Try another! \");\r\n        });\r\n    } catch (error) {\r\n        setMovErrorMsg(\"Error: This title is unrated. Try another!\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    IIWW_RATING = 0;\r\n    getHandler();\r\n  }, []);\r\n\r\n  const createIIWWRating = (ratingsData, Genre) => {\r\n    let count = 0;\r\n\r\n    while (count < ratingsData.length) {\r\n      if (ratingsData[count].Source === \"Internet Movie Database\") {\r\n        const imdbvalArray = ratingsData[count].Value.split(\"/\");\r\n        imdbval = imdbvalArray[0] * 10;\r\n        imdbR = true;\r\n      }\r\n\r\n      if (ratingsData[count].Source === \"Rotten Tomatoes\") {\r\n        rotval = ratingsData[count].Value.replace(\"%\", \"\");\r\n        rotR = true;\r\n      }\r\n\r\n      if (ratingsData[count].Source === \"Metacritic\") {\r\n        metvalArray = ratingsData[count].Value.split(\"/\");\r\n        metR = true;\r\n      }\r\n      count++;\r\n    }\r\n\r\n    if (imdbR === true && rotR === false && metR === false) {\r\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval);\r\n    }\r\n\r\n    if (imdbR === true && rotR === true && metR === false) {\r\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.75);\r\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval * 0.25);\r\n    }\r\n\r\n    if (imdbR === true && rotR === false && metR === true) {\r\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.75);\r\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0] * 0.25);\r\n    }\r\n    if (imdbR === true && rotR === true && metR === true) {\r\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(imdbval * 0.6);\r\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(rotval * 0.2);\r\n      IIWW_RATING = parseInt(IIWW_RATING) + parseInt(metvalArray[0] * 0.2);\r\n    }\r\n\r\n    if (imdbR === false && rotR === false && metR === false) {\r\n        setMovErrorMsg(\"Error: This title is unrated. Try another!\");\r\n    }\r\n\r\n    if (Genre.length > 8) {\r\n      const genreArray = Genre.split(\", \");\r\n      let genreIndex = genreArray.indexOf(\"Horror\");\r\n      if (genreIndex !== -1) {\r\n        ourRating(IIWW_RATING, \"65\");\r\n      }\r\n      genreIndex = genreArray.indexOf(\"Comedy\");\r\n      if (genreIndex !== -1) {\r\n        ourRating(IIWW_RATING, \"60\");\r\n      } else {\r\n        ourRating(IIWW_RATING, \"70\");\r\n      }\r\n    } else if (Genre === \"Comedy\") {\r\n      ourRating(IIWW_RATING, \"60\");\r\n    } else if (Genre === \"Horror\") {\r\n      ourRating(IIWW_RATING, \"65\");\r\n    } else {\r\n      ourRating(IIWW_RATING, \"70\");\r\n    }\r\n  };\r\n\r\n  const ourRating = (rating, ratingMin) => {\r\n    if (rating >= ratingMin) {\r\n      setiiwwStyle(\r\n        <InfoCard\r\n          styles=\"card text-white bg-success mb-3\"\r\n          title=\"Is It Worth Watching?\"\r\n          rating={IIWW_RATING + \"/100\"}\r\n          text=\"Yes it is!\"\r\n        />\r\n      );\r\n    } else {\r\n      setiiwwStyle(\r\n        <InfoCard\r\n          styles=\"card text-white bg-danger mb-3\"\r\n          title=\"Is It Worth Watching?\"\r\n          rating={IIWW_RATING + \"/100\"}\r\n          text=\"No, don't waste your time!\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"moviePageContainer\">\r\n      <PosterCard\r\n        key={props.id}\r\n        id={props.id}\r\n        title={movieData.Title}\r\n        plot={movieData.Plot}\r\n        poster={movieData.Poster}\r\n        year={movieData.Released}\r\n        runtime={movieData.Runtime}\r\n      />\r\n      <ul className=\"ratingsContainer\">\r\n        {iiwwStyle}\r\n        {ratingsData.map((movie) => (\r\n          <InfoCard\r\n            styles=\"card text-white bg-dark mb-3\"\r\n            title={movie.Source}\r\n            rating={movie.Value}\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      <button className=\"backButton\" onClick={props.goBack}>\r\n        <ion-icon name=\"arrow-back-outline\"></ion-icon>\r\n      </button>\r\n\r\n      <h1>{movErrorMsg}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"]},"metadata":{},"sourceType":"module"}